import numpy as np
import argparse

def hash_dna4(seq:str,alphabet_hash_dict:dict={dna:i for i,dna in enumerate('ACGT')}) -> np.uint16:
    """
    maximum k=8
    """
    value = 0
    for s in seq.upper():
        value = (value << 2)+alphabet_hash_dict[s]
    return np.uint16(value)

def dot_matrix(seq1:str, seq2:str, k:int=8) -> np.ndarray:
    """
    computes a dot plot matrix and returns a matrix. 0 < k <= 8 
    """
    # Create a list of k-mers from seq1
    seq1_kmers = np.zeros(len(seq1) - k+1, dtype=np.uint16)
    for i in range(len(seq1) - (k-1)):
        seq1_kmers[i] = hash_dna4(seq1[i:i+k])
    # Create a list of k-mers from seq2
    seq2_kmers = np.zeros(len(seq1) - k+1, dtype=np.uint16)
    for i in range(len(seq2) - (k-1)):
        seq2_kmers[i] = hash_dna4(seq2[i:i+k])
    # Create a matrix of 0's
    matrix = np.zeros((len(seq1_kmers), len(seq2_kmers)), dtype=bool)
    # Fill in the matrix with 1's
    for i in tqdm(range(len(seq1_kmers))):
        for j in range(len(seq2_kmers)):
            if seq1_kmers[i] == seq2_kmers[j]:
                matrix[i][j] = True
    return matrix

def print_dot(seq1:str, seq2:str, k:int=8, print_to_terminal:bool=False) -> np.ndarray:
    """
    computes a dot plot matrix and returns a matrix. k must be greater than 0. Printing to terminal is optional.
    """
    matrix = dot_matrix(seq1,seq2,k)
    if print_to_terminal:
        for i in range(len(matrix)):
            for j in range(len(matrix[0])):
                print('X' if matrix[i][j] else ' ', end=" ")
            print()
    return matrix

def run():
    parser = argparse.ArgumentParser(description="Prints a dot plot matrix")
    parser.add_argument("seq1", type=str, help="First sequence")
    parser.add_argument("seq2", type=str, help="Second sequence")
    parser.add_argument("-k", type=int, default=5, help="Length of k-mers")
    parser.add_argument("-p", action="store_true", help="Print to terminal")
    args = parser.parse_args()
    print_dot(args.seq1, args.seq2, args.k, args.p)


if __name__ == "__main__":
    run()

# # A small test example
# s1="AATGACTGGGACTATTATAAAAATGCTCTCGCTGACT"
# s2="CGTAGATATGGGACTATTATAAAAATGCTCTACCGTC"
# k=5
# # print and plot to img
# import matplotlib.pyplot as plt
# matrix = print_dot(s1,s2,k,True)
# plt.imshow(matrix)
